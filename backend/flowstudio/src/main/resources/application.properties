server.port=9090

# env
spring.config.import=file:.env[.properties]

# Profile
spring.profiles.group.dev=dev
spring.profiles.group.local=local
spring.profiles.group.prod=prod
spring.profiles.active=dev

# JPA
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comment=true
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# JWT
spring.jwt.secret=${JWT_SECRET}
spring.jwt.access-expire=${JWT_ACCESS_EXPIRATION}
spring.jwt.refresh-expire=${JWT_REFRESH_EXPIRATION}

# API KEYS
spring.api-keys.openai=${OPENAI_API_KEY}
spring.api-keys.claude=${CLAUDE_API_KEY}
spring.api-keys.gemini=${GEMINI_API_KEY}
spring.api-keys.clova=${CLOVA_API_KEY}

# Open in view
spring.jpa.open-in-view=false

# Logging
logging.level.jdbc.sqlonly=off
logging.level.jdbc.sqltiming=info
logging.level.jdbc.resultsettable=info
logging.level.jdbc.audit=off
logging.level.jdbc.resultset=off
logging.level.jdbc.connection=off

management.endpoints.web.exposure.include=health

# OAUth2
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_image,profile_nickname

spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.scope=read:user,user:email

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# Spring AI
spring.ai.openai.api-key=${OPENAI_API_KEY}

# Milvus
milvus.host=${MILVUS_HOST}
milvus.port=${MILVUS_PORT}
milvus.token=${MILVUS_TOKEN}
milvus.db.name=${MILVUS_DB_NAME}

# file
spring.servlet.multipart.maxFileSize=50MB
spring.servlet.multipart.maxRequestSize=50MB

# langchain fastapi
langchain.fastapi.url=${LANGCHAIN_FASTAPI_URL}